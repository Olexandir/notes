{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport { tap } from \"rxjs\";\nimport { DataStore } from \"../services/data.store.service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoService {\n  constructor(http) {\n    this.http = http;\n    this.todoList = new DataStore();\n    this.TODO_URL = \"/todos\";\n  }\n  getTodoList() {\n    return this.http.get(`${environment.BASE_URL}${this.TODO_URL}`).pipe(tap(data => this.todoList.setData(data)));\n  }\n  static #_ = this.ɵfac = function TodoService_Factory(t) {\n    return new (t || TodoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TodoService,\n    factory: TodoService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;AAE1D,SAAqBC,GAAG,QAAQ,MAAM;AACtC,SAASC,SAAS,QAAQ,gCAAgC;;;AAK1D,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJjB,aAAQ,GAAG,IAAIH,SAAS,EAAmB;IAEjC,aAAQ,GAAG,QAAQ;EAEG;EAEhCI,WAAW;IAChB,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CAAoB,GAAGP,WAAW,CAACQ,QAAQ,GAAG,IAAI,CAACC,QAAQ,EAAE,CAAC,CACjEC,IAAI,CAACT,GAAG,CAAEU,IAAI,IAAK,IAAI,CAACC,QAAQ,CAACC,OAAO,CAACF,IAAI,CAAC,CAAC,CAAC;EACrD;EAAC;qBAXUR,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["environment","tap","DataStore","TodoService","constructor","http","getTodoList","get","BASE_URL","TODO_URL","pipe","data","todoList","setData","factory","providedIn"],"sourceRoot":"","sources":["/home/user/notes/src/app/todo/todo.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { ToDoDTOResponce } from \"../interfaces/to-do-dto.interface\";\nimport { Observable, tap } from \"rxjs\";\nimport { DataStore } from \"../services/data.store.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class TodoService {\n  public todoList = new DataStore<ToDoDTOResponce>();\n\n  private readonly TODO_URL = \"/todos\";\n\n  constructor(private http: HttpClient) {}\n\n  public getTodoList(): Observable<ToDoDTOResponce[]> {\n    return this.http\n      .get<ToDoDTOResponce[]>(`${environment.BASE_URL}${this.TODO_URL}`)\n      .pipe(tap((data) => this.todoList.setData(data)));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}