{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class ABCDirective {\n  constructor(elm, renderer) {\n    this.elm = elm;\n    this.renderer = renderer;\n    this.abcDir = 0;\n  }\n  ngOnInit() {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.check(this.abcDir);\n  }\n  check(index) {\n    if (this.abcDir % 2) {\n      this.renderer.setStyle(this.elm.nativeElement, \"color\", \"red\");\n    }\n  }\n  static #_ = this.ɵfac = function ABCDirective_Factory(t) {\n    return new (t || ABCDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n  static #_2 = this.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: ABCDirective,\n    selectors: [[\"\", \"abcDir\", \"\"]],\n    inputs: {\n      abcDir: \"abcDir\"\n    }\n  });\n}","map":{"version":3,"mappings":";AAKA,OAAM,MAAOA,YAAY;EAGvBC,YAAoBC,GAAe,EAAUC,QAAmB;IAA5C,QAAG,GAAHD,GAAG;IAAsB,aAAQ,GAARC,QAAQ;IAF5C,WAAM,GAAW,CAAC;EAEwC;EAEnEC,QAAQ;IACN;IACA;IACA,IAAI,CAACC,KAAK,CAAC,IAAI,CAACC,MAAM,CAAC;EACzB;EAEQD,KAAK,CAACE,KAAa;IACzB,IAAI,IAAI,CAACD,MAAM,GAAG,CAAC,EAAE;MACnB,IAAI,CAACH,QAAQ,CAACK,QAAQ,CAAC,IAAI,CAACN,GAAG,CAACO,aAAa,EAAE,OAAO,EAAE,KAAK,CAAC;;EAElE;EAAC;qBAfUT,YAAY;EAAA;EAAA;UAAZA,YAAY;IAAAU;IAAAC;MAAAL;IAAA;EAAA","names":["ABCDirective","constructor","elm","renderer","ngOnInit","check","abcDir","index","setStyle","nativeElement","selectors","inputs"],"sourceRoot":"","sources":["/home/user/notes/src/app/abc.directive.ts"],"sourcesContent":["import { Directive, ElementRef, Input, Renderer2 } from \"@angular/core\";\n\n@Directive({\n  selector: \"[abcDir]\",\n})\nexport class ABCDirective {\n  @Input() abcDir: number = 0;\n\n  constructor(private elm: ElementRef, private renderer: Renderer2) {}\n\n  ngOnInit(): void {\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n    this.check(this.abcDir);\n  }\n\n  private check(index: number): void {\n    if (this.abcDir % 2) {\n      this.renderer.setStyle(this.elm.nativeElement, \"color\", \"red\");\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}