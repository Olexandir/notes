{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport { tap } from \"rxjs\";\nimport { DataStore } from \"../../data.store\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.userList = new DataStore();\n    this.USER_URL = \"/users\";\n  }\n  getAll() {\n    return this.http.get(`${environment.BASE_URL}${this.USER_URL}`).pipe(tap(data => this.userList.setData(data)));\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,GAAG,QAAQ,MAAM;AACtC,SAASC,SAAS,QAAQ,kBAAkB;;;AAO5C,OAAM,MAAOC,WAAW;EAKtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAJjB,aAAQ,GAAG,IAAIH,SAAS,EAAW;IAEzB,aAAQ,GAAG,QAAQ;EAEG;EAEvCI,MAAM;IACJ,OAAO,IAAI,CAACD,IAAI,CACbE,GAAG,CAAY,GAAGP,WAAW,CAACQ,QAAQ,GAAG,IAAI,CAACC,QAAQ,EAAE,CAAC,CACzDC,IAAI,CAACT,GAAG,CAAEU,IAAI,IAAK,IAAI,CAACC,QAAQ,CAACC,OAAO,CAACF,IAAI,CAAC,CAAC,CAAC;EACrD;EAAC;qBAXUR,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAW,SAAXX,WAAW;IAAAY,YAFV;EAAM","names":["environment","tap","DataStore","UserService","constructor","http","getAll","get","BASE_URL","USER_URL","pipe","data","userList","setData","factory","providedIn"],"sourceRoot":"","sources":["/home/user/notes/src/app/services/api/user/user.service.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { Observable, tap } from \"rxjs\";\nimport { DataStore } from \"../../data.store\";\nimport { DataService } from \"../../data.service\";\nimport { UserDTO } from \"src/app/interfaces/user.dto.interface\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserService implements DataService<UserDTO> {\n  public userList = new DataStore<UserDTO>();\n\n  private readonly USER_URL = \"/users\";\n\n  constructor(private http: HttpClient) {}\n\n  getAll(): Observable<UserDTO[]> {\n    return this.http\n      .get<UserDTO[]>(`${environment.BASE_URL}${this.USER_URL}`)\n      .pipe(tap((data) => this.userList.setData(data)));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}